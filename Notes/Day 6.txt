Topics for Today:
-----------------
Python Functions
	Built-In Functions and Range() Functions
		Understanding built-in functions like len(), type(), str(), int()
		Generating sequences using range()
	User Defined Functions
		Creating functions
		Understanding parameters and return values

If possible we will be covering this too:
=========================================		
Python Modules
	Built-In Modules
		Importing and using built-in modules like math, datetime
	User Defined Modules
		Creating and importing user-defined modules
		Setting up Module Path
		Understanding PYTHONPATH
		Adding directories to module path
===========================================================
Python Functions:
-----------------
	What are functions? Why do we need it. 
	
	Control structures:
		Any problem can be solved using these control structures.
		
	Program --> Set of instruction to perform a task.
	These instructions do involve these control structures.


	sub-task or sub-program:
		Your language support from sub-programming is through functions.
	
	def functionName(arguments):
		statements here...
		statements here...
=========================================================	
	numOps.py 
	---------	
def isEven(num): #1
	'''
		return true or false
	'''	
	
def isPrime(num):#2
	'''
		return true or false
	'''	

def isPalindrome(num):#3
	'''
		return true or false
	'''	

def isArmstrong(num):#4
	'''
		return true or false
	'''	
	1 --> 1 ** 1 --> 1 
	12 --> 1 ** 2 + 2 ** 2 --> 12 != 5
	153 --> 1 ** 3 + 5 ** 3 + 3 **3 --> 1 + 125 + 27 --> 153

def isFactorial(num):#5
	'''
		return true or false
		true if num is a factorial of some number
		for example 			
			num = 2 --> 2!
			num = 6 --> 3!
			num = 24 --> 4!
			num = 120 --> 5!		
		
	'''

def isLeap(Year):#6
	'''
		return true or false
	'''
========================================================
bitOps.py: 
----------
	def	bitState(num, pos):
	def	bitToggle(num, pos):
	def	nibbleToggle(num, pos):
	def	leftRotate(num, nbits):
	def	rightRotate(num, nbits):
========================================================
calendarPrint.py :
------------------
	def monthName(mm): # --> 2 --> February
	def maxDays(mm, yyyy): #--> 
	def isLeap(yyyy):
	def printCalendar(dd, mm, yyyy):
	def dayOfWeek(dd, mm, yyyy):
========================================================
Functions and program control flow:
----------------------------------	
	If a function calls itself we call it recursive function. 
	This process is called recursion. 
	
	Depending on the function call we can 
		direct recursion
		indirect recursion
		
	A() ---> A() ---> 	direct recursion
	fun() --> fun() -->
	
	A() --> B() --> A() --> Indirect recursion
	funOne() --> funTwo()  ---> funOne() --> Indirect recursion
=========================================================
Depending on the number of function calls 
	single recursion
	binary or double recursion
	multiple recursion
=============================================================
1. Write a recursive function to find factorial of a given number.
2. Write a recursive function to find sum of numbers from 0 to n where n is a given number.
3. Write a recursive function to print the given string in reverse order.
4. Write a recursive function to reverse the given list.
5. Write a recursive function to reverse the given number.
------------------------------------------------------------
To be presenting:
-----------------
	Akash M 
	Vasu Gaur
	Jyotirmay Chowdhury	
	Amit Pandey
	Pankaj
============================================================
arguments or parameters :
-------------------------
	unpacking 






